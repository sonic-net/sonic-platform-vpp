- name: SONiC Software Data Plane Automation - VM Bring up
  hosts: clusters
  tasks:
   - name:  Git clone repo
     git:
       repo: https://github.com/sonic-net/sonic-mgmt.git
       dest: /home/cisco/sonic-mgmt
       clone: yes
     register: command_result
     tags:
     - initialize 
   - name: Bring up bridge network      
     shell: | 
       cd sonic-mgmt/ansible
       sudo -H ./setup-management-network.sh
     register: command_result 
     failed_when: command_result.rc != 0     
     tags:
     - initialize    
   - name: Start sonic mgmt container
     shell: | 
       cd /home/cisco/sonic-mgmt/
       ./setup-container.sh -n sonic-mgmt-vpp -d /data
     register: command_result 
     failed_when: command_result.rc != 0        
     tags:
     - buildt0
     - buildt1
   - name: Setup DUT and topology
     ansible.builtin.shell: |
       set timeout 7200
       spawn docker exec --user cisco -ti sonic-mgmt-vpp bash
       expect ":~$ "
       send "cd /data/sonic-mgmt/ansible\n"
       expect ":/data/sonic-mgmt/ansible$ "
       send " ./testbed-cli.sh -t vtestbed.yaml -m veos_vtb -k ceos add-topo vms-kvm-{{ topology }} password.txt\n"
       expect ":/data/sonic-mgmt/ansible$ "
       exit 0
     args:
       executable: /usr/bin/expect
     register: command_result 
     failed_when: "'unreachable=0' not in command_result.stdout or 'failed=0' not in command_result.stdout"
     tags:
     - buildt0
     - buildt1
   - name: Verify DUT is reachable for T1
     shell: |
       ping -c5 10.250.0.105
     register: command_result
     failed_when: "'0 received' in command_result.stdout"
     tags:
     - buildt1
   - name: Verify DUT is reachable for T0
     shell: |
       ping -c5 10.250.0.101
     register: command_result
     failed_when: "'0 received' in command_result.stdout"
     tags:
     - buildt0     
   - name: Cleanup SSH known hosts T1
     shell: | 
       sudo ssh-keygen -f "/home/{{ ansible_user }}/.ssh/known_hosts" -R "10.250.0.105"
     tags:
     - buildt1     
   - name: Cleanup SSH known hosts T0
     shell: | 
       sudo ssh-keygen -f "/home/{{ ansible_user }}/.ssh/known_hosts" -R "10.250.0.101"
     tags:
     - buildt0     
   - name: Configure mgmt interface on T0 DUT
     ansible.builtin.shell: |
       set timeout 60
       spawn ssh -o StrictHostKeyChecking=no admin@10.250.0.101
       expect "admin@10.250.0.101's password:"
       send "{{ dut_password }}\n"
       expect "admin@vlab-01:~$ "
       send "sudo config interface ip add eth0 10.250.0.101/24 10.250.0.1\n"
       expect "admin@vlab-01:~$ "
       send "sudo config save -y\n"
       expect "admin@vlab-01:~$ "
       exit 0
     args:
       executable: /usr/bin/expect
     tags:
     - buildt0
   - name: Configure mgmt interface on T1 DUT
     ansible.builtin.shell: |
       set timeout 60
       spawn ssh -o StrictHostKeyChecking=no admin@10.250.0.105
       expect "admin@10.250.0.105's password:"
       send "{{ dut_password }}\n"
       expect "admin@vlab-03:~$ "
       send "sudo config interface ip add eth0 10.250.0.105/24 10.250.0.1\n"
       expect "admin@vlab-03:~$ "
       send "sudo config save -y\n"
       expect "admin@vlab-03:~$ "
       exit 0
     args:
       executable: /usr/bin/expect
     tags:
     - buildt1     
   - name: Verify DUT is reachable for T1 after configuring mgmt interface
     shell: |
       ping -c5 10.250.0.105
     register: command_result
     failed_when: "'0 received' in command_result.stdout"
     tags:
     - buildt1
   - name: Verify DUT is reachable for T0
     shell: |
       ping -c5 10.250.0.101
     register: command_result
     failed_when: "'0 received' in command_result.stdout"
     tags:
     - buildt0      
   - name: Load original configuration on T0 DUT after configuring mgmt interface
     ansible.builtin.shell: |
       set timeout 60
       spawn ssh -o StrictHostKeyChecking=no admin@10.250.0.101
       expect "admin@10.250.0.101's password:"
       send "{{ dut_password }}\n"
       expect "admin@vlab-01:~$ "  
       send "sudo config load /etc/sonic/config_db.json.orig -y\n"  
       expect "admin@vlab-01:~$ "  
       send "\n"
       exit 0
     args:
       executable: /usr/bin/expect
     tags:
     - buildt0    
   - name: Load original configuration on T1 DUT
     ansible.builtin.shell: |
       set timeout 60
       spawn ssh -o StrictHostKeyChecking=no admin@10.250.0.105
       expect "admin@10.250.0.105's password:"
       send "{{ dut_password }}\n"
       expect "admin@vlab-03:~$ "  
       send "sudo config load /etc/sonic/config_db.json.orig -y\n"  
       expect "admin@vlab-03:~$ "  
       send "\n"
       exit 0
     args:
       executable: /usr/bin/expect
     tags:
     - buildt1
   - name: Pause for 2 minutes for original configuration to be in place      
     ansible.builtin.pause:
       minutes: 2
     tags:
     - buildt0
     - buildt1
   - name: Configure minigraph
     ansible.builtin.shell: |
       set timeout 360
       spawn docker exec --user cisco -ti sonic-mgmt-vpp bash
       expect ":~$ "
       send "cd /data/sonic-mgmt/ansible\n"
       expect ":/data/sonic-mgmt/ansible$ "
       send "./testbed-cli.sh -t vtestbed.yaml -m veos_vtb deploy-mg vms-kvm-{{ topology }} veos_vtb password.txt \n"
       expect ":/data/sonic-mgmt/ansible$ "
       exit 0
     args:
       executable: /usr/bin/expect
     register: command_result 
     failed_when: "'unreachable=0' not in command_result.stdout or 'failed=0' not in command_result.stdout"       
     tags:
     - buildt0
     - buildt1
   - name: Run T0 Sanity
     ansible.builtin.shell: |
       set timeout 1800
       spawn docker exec --user cisco -ti sonic-mgmt-vpp bash
       expect ":~$ "
       send "cd /data/sonic-mgmt/tests\n"
       expect ":/data/sonic-mgmt/tests$ "
       send "./run_tests.sh -n vms-kvm-{{ topology }} -d vlab-01 -c telemetry/test_telemetry.py -f vtestbed.yaml -i ../ansible/veos_vtb -e \"--neighbor_type=eos\" \n"
       expect ":/data/sonic-mgmt/tests$ "
       send "./run_tests.sh -n vms-kvm-{{ topology }} -d vlab-01 -c bgp/test_bgp_fact.py  -f vtestbed.yaml -i ../ansible/veos_vtb -e \"--neighbor_type=eos\" \n"
       expect ":/data/sonic-mgmt/tests$ "
       exit 0
     args:
       executable: /usr/bin/expect
     tags:
     - testt0
   - name: Run T1 Sanity
     ansible.builtin.shell: |
       set timeout 1800
       spawn docker exec --user cisco -ti sonic-mgmt-vpp bash
       expect ":~$ "
       send "cd /data/sonic-mgmt/tests\n"
       expect ":/data/sonic-mgmt/tests$ "
       send "./run_tests.sh -n vms-kvm-{{ topology }} -d vlab-03 -c telemetry/test_telemetry.py -f vtestbed.yaml -i ../ansible/veos_vtb -e \"--neighbor_type=eos\" \n"
       expect ":/data/sonic-mgmt/tests$ "
       send "./run_tests.sh -n vms-kvm-{{ topology }} -d vlab-03 -c bgp/test_bgp_fact.py  -f vtestbed.yaml -i ../ansible/veos_vtb -e \"--neighbor_type=eos\" \n"
       expect ":/data/sonic-mgmt/tests$ "
       exit 0
     args:
       executable: /usr/bin/expect
     tags:
     - testt1     
   - name: Remove Topology
     ansible.builtin.shell: |
       set timeout 300
       spawn docker exec --user cisco -ti sonic-mgmt-vpp bash
       expect ":~$ "
       send "cd /data/sonic-mgmt/ansible\n"
       expect ":/data/sonic-mgmt/ansible$ "
       send "./testbed-cli.sh -t vtestbed.yaml -m veos_vtb -k ceos remove-topo vms-kvm-{{ topology }} password.txt\n"
       expect ":/data/sonic-mgmt/ansible$ "
       exit 0
     args:
       executable: /usr/bin/expect
     register: command_result 
     failed_when: "'unreachable=0' not in command_result.stdout or 'failed=0' not in command_result.stdout"       
     tags:
     - teart0
     - teart1    
   - name: Stop sonic mgmt container
     shell: | 
       docker rm -f sonic-mgmt-vpp
     tags:
     - teart0
     - teart1 
   - name: Delete bridge link
     shell: | 
       sudo ip link set br1 down
       sudo brctl delbr br1
     tags:
     - delete         
   - name: Delete sonic-mgmt directory
     shell: | 
       sudo rm -fr /home/cisco/sonic-mgmt
     tags:
     - delete         
