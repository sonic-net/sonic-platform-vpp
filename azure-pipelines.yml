# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pr:
- main

trigger:
  batch: true
  branches:
    include:
    - main

pool: sonicbld-1es

schedules:
- cron: "0 8 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - main
  always: true

resources:
  repositories:
  - repository: sonic-platform-vpp
    type: github
    name: sonic-net/sonic-platform-vpp
    ref: main
    endpoint: sonic-net
  - repository: buildimage
    type: github
    name: sonic-net/sonic-buildimage
    endpoint: sonic-net
    ref: master

parameters:
  - name: debian_version
    type: string
    default: bookworm
  - name: arch
    type: string
    default: amd64
   
variables:
  - name: BUILD_BRANCH
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      value: $(System.PullRequest.TargetBranch)
    ${{ else }}:
      value: $(Build.SourceBranchName)
  - name: SONIC_BRANCH
    value: master
  - name: CACHE_OPTIONS
    value: SONIC_DPKG_CACHE_METHOD=cache SONIC_DPKG_CACHE_SOURCE=/nfs/dpkg_cache/vpp
  - name: BUILD_OPTIONS
    value: ENABLE_DOCKER_BASE_PULL=y USERNAME=admin SONIC_BUILD_JOBS=$(nproc) PLATFORM=vpp SONIC_VERSION_CONTROL_COMPONENTS=py2,py3,web,git,docker
stages:
- stage: build
  jobs:
  - job:
    timeoutInMinutes: 450
    steps:
    - checkout: buildimage
      submodules: recursive
      fetchDepth: 0
      clean: true
      displayName: 'checkout sonic-buildimage'
    - script: |
        set -ex
        git checkout $(SONIC_BRANCH)
        make init
        rm -rf platform/vpp
      workingDirectory: $(System.DefaultWorkingDirectory)/sonic-buildimage
    - checkout: self
      displayName: 'checkout sonic-platform-vpp'
    - script: | 
        set -ex
        mv $(System.DefaultWorkingDirectory)/sonic-platform-vpp $(System.DefaultWorkingDirectory)/sonic-buildimage/platform/vpp
        cd $(System.DefaultWorkingDirectory)/sonic-buildimage/platform/vpp
        git revert 67edf2f39c -n
      displayName: 'revert 67edf2f39c'
    - script: |
        set -ex
        sudo modprobe overlay
        sudo apt-get install -y acl
        sudo bash -c "echo 1 > /proc/sys/vm/compact_memory"
        $(BUILD_OPTIONS) $(CACHE_OPTIONS) make configure PLATFORM=vpp
      workingDirectory: $(System.DefaultWorkingDirectory)/sonic-buildimage
      displayName: 'make configure'
    - script: |
        $(BUILD_OPTIONS) $(CACHE_OPTIONS) make target/debs/${{ parameters.debian_version }}/libvppinfra_main-release_amd64.deb
        find target/debs/${{ parameters.debian_version }}/ -name "*vpp*.deb" -exec cp {} /$(System.DefaultWorkingDirectory)/artifacts \; 
      workingDirectory: $(System.DefaultWorkingDirectory)/sonic-buildimage
      displayName: "Build VPP packages from source"
    - publish: $(System.DefaultWorkingDirectory)/artifacts
      artifact: vpp
      displayName: "Archive vpp debian packages"
    - script: |
        $(BUILD_OPTIONS) $(CACHE_OPTIONS) make target/sonic-vpp.img.gz
      workingDirectory: $(System.DefaultWorkingDirectory)/sonic-buildimage
      displayName: "Build sonic-vpp image"
    - publish: $(System.DefaultWorkingDirectory)/target/sonic-vpp.img.gz
      artifact: sonic-vpp
      displayName: "Archive sonic-vpp image"

