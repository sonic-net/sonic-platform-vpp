/*
 * Copyright (c) 2024 Cisco and/or its affiliates.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option version = "1.0.0";
import "vnet/interface_types.api";
import "vnet/fib/fib_types.api";

typedef tunterm_acl_rule {
    vl_api_address_t  dst;

    /* TODO: Add support for multiple paths */
    vl_api_fib_path_t path;
};

/** \brief Replace an existing tunterm acl in-place or create a new one
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param tunterm_acl_index - an existing tunterm index (0..0xfffffffe) to replace, or 0xffffffff to make a new one
    @param is_ipv6 - is this an IPv6 acl
    @param count - number of rules
    @r - Rules for this tunterm acl
*/

define tunterm_acl_add_replace
{
  u32 client_index;
  u32 context;
  u32 tunterm_acl_index; /* ~0 to add, existing # to replace */
  bool is_ipv6;
  u32 count;
  vl_api_tunterm_acl_rule_t r[count];
};

/** \brief Reply to add/replace tunterm acl
    @param context - returned sender context, to match reply w/ request
    @param tunterm_acl_index - index of the updated or newly created tunterm acl
    @param retval 0 - no error
*/

define tunterm_acl_add_replace_reply
{
  u32 context;
  u32 tunterm_acl_index;
  i32 retval;
};

/** \brief Delete a tunterm acl
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param tunterm_acl_index - tunterm index to delete
*/

autoreply define tunterm_acl_del
{
  u32 client_index;
  u32 context;
  u32 tunterm_acl_index;
};

/** \brief Add/remove a tunterm acl index to/from an interface
    @param client_index - opaque cookie to identify the sender
    @param context - sender context, to match reply w/ request
    @param is_add - add or delete the tunterm index
    @param sw_if_index - the interface to/from which we add/remove the tunterm acl
    @param tunterm_acl_index - index of tunterm acl for the operation
*/

autoreply define tunterm_acl_interface_add_del
{
  u32 client_index;
  u32 context;
  bool is_add;
  vl_api_interface_index_t sw_if_index;
  u32 tunterm_acl_index;
};
